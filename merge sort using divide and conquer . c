#include <stdio.h>
void merge(int arr[], int left[], int left_len, int right[], int right_len) 
{
    int i = 0, j = 0, k = 0;
    while (i < left_len && j < right_len) 
    {
        if (left[i] < right[j]) 
        {
            arr[k++] = left[i++];
        } 
        else 
        {
            arr[k++] = right[j++];
        }
    }
    while (i < left_len) 
    {
        arr[k++] = left[i++];
    }
    while (j < right_len) 
    {
        arr[k++] = right[j++];
    }
}
void merge_sort(int arr[], int len) 
{
    if (len < 2) 
    {
        return;
    }
    int mid = len / 2;
    int left[mid];
    int right[len - mid];
    for (int i = 0; i < mid; i++) 
    {
        left[i] = arr[i];
    }
    for (int i = mid; i < len; i++) 
    {
        right[i - mid] = arr[i];
    }
    merge_sort(left, mid);
    merge_sort(right, len - mid);
    merge(arr, left, mid, right, len - mid);
}
int main() 
{
    int arr[] = {3, 7, 1, 9, 5, 2};
    int len = sizeof(arr) / sizeof(arr[0]);
    printf("Unsorted array: ");
    for (int i = 0; i < len; i++) 
    {
        printf("%d ", arr[i]);
    }
    printf("\n");
    merge_sort(arr, len);
    printf("Sorted array: ");
    for (int i = 0; i < len; i++) 
    {
        printf("%d ", arr[i]);
    }
    printf("\n");
    return 0;
}
